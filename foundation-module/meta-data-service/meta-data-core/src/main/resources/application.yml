server:
  port: 8082

spring:
  application:
    name: meta-data-service
  datasource:
    dynamic:
      primary: master1
      strict: false
      datasource:
        master1:
          type: MYSQL
          host: localhost
          port: 3306
          database: indigo
          username: root
          password: mamnan920130.
          params:
            useUnicode: "true"
            characterEncoding: "utf8"
            useSSL: "false"
            serverTimezone: "Asia/Shanghai"
          hikari:
            minimumIdle: 5
            maximumPoolSize: 15
            idleTimeout: 30000
            maxLifetime: 1800000
            connectionTimeout: 30000
            connectionTestQuery: "SELECT 1"
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      database: 0
      timeout: 2000ms
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 0
          max-wait: -1

# Synapse 配置
synapse:
  jwt:
    enabled: true
    secret: SynapseMOM@2024!SecureJWTKey#256
    expiration: 1800
  
  security:
    session:
      store-type: redis
      redis-prefix: "session:"
      timeout: 7200
    
    permission:
      enabled: true
      # 是否检查服务间调用的权限
      check-service-call: true
      # 服务调用所需的基础权限
      service-permissions:
        - "service:metadata:access"
      # 特定接口的额外权限要求
      api-permissions:
        - path: "/api/metadata/**"
          method: "GET"
          permissions: ["metadata:read"]
        - path: "/api/metadata/**"
          method: "POST"
          permissions: ["metadata:write"]
        - path: "/api/metadata/**"
          method: "PUT"
          permissions: ["metadata:write"]
        - path: "/api/metadata/**"
          method: "DELETE"
          permissions: ["metadata:delete"]

# 日志配置
logging:
  level:
    root: INFO
    com.indigo: DEBUG
    com.indigo.security: DEBUG  # 开启安全相关的调试日志

# 管理端点
management:
  endpoints:
    web:
      exposure:
        include: ["health", "info"]
  endpoint:
    health:
      show-details: when_authorized

